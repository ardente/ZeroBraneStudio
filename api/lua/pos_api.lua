return {
    pos = {
        type = "lib",
        childs = {
            AF_INET = {type = "val"},
            CLOSEICON = {type = "val"},
            DISP_ASCII = {type = "val"},
            DISP_CFONT = {type = "val"},
            DISP_CLRLINE = {type = "val"},
            DISP_INVLINE = {type = "val"},
            DISP_LEFT = {type = "val"},
            DISP_MEDIACY = {type = "val"},
            DISP_REVERSE = {type = "val"},
            DISP_RIGHT = {type = "val"},
            E2BIG = {type = "val"},
            EACCES = {type = "val"},
            EADDRINUSE = {type = "val"},
            EADDRNOTAVAIL = {type = "val"},
            EADV = {type = "val"},
            EAFNOSUPPORT = {type = "val"},
            EAGAIN = {type = "val"},
            EALREADY = {type = "val"},
            EBADE = {type = "val"},
            EBADF = {type = "val"},
            EBADFD = {type = "val"},
            EBADMSG = {type = "val"},
            EBADR = {type = "val"},
            EBADRQC = {type = "val"},
            EBADSLT = {type = "val"},
            EBFONT = {type = "val"},
            EBUSY = {type = "val"},
            ECHILD = {type = "val"},
            ECHRNG = {type = "val"},
            ECOMM = {type = "val"},
            ECONNABORTED = {type = "val"},
            ECONNREFUSED = {type = "val"},
            ECONNRESET = {type = "val"},
            EDEADLK = {type = "val"},
            EDEADLOCK = {type = "val"},
            EDESTADDRREQ = {type = "val"},
            EDOM = {type = "val"},
            EDOTDOT = {type = "val"},
            EDQUOT = {type = "val"},
            EEXIST = {type = "val"},
            EFAULT = {type = "val"},
            EFBIG = {type = "val"},
            EHOSTDOWN = {type = "val"},
            EHOSTUNREACH = {type = "val"},
            EIDRM = {type = "val"},
            EILSEQ = {type = "val"},
            EINPROGRESS = {type = "val"},
            EINTR = {type = "val"},
            EINVAL = {type = "val"},
            EIO = {type = "val"},
            EISCONN = {type = "val"},
            EISDIR = {type = "val"},
            EISNAM = {type = "val"},
            EL2HLT = {type = "val"},
            EL2NSYNC = {type = "val"},
            EL3HLT = {type = "val"},
            EL3RST = {type = "val"},
            ELIBACC = {type = "val"},
            ELIBBAD = {type = "val"},
            ELIBEXEC = {type = "val"},
            ELIBMAX = {type = "val"},
            ELIBSCN = {type = "val"},
            ELNRNG = {type = "val"},
            ELOOP = {type = "val"},
            EMEDIUMTYPE = {type = "val"},
            EMFILE = {type = "val"},
            EMLINK = {type = "val"},
            EMSGSIZE = {type = "val"},
            EMULTIHOP = {type = "val"},
            EM_BMP_ROTATE0 = {type = "val"},
            EM_BMP_ROTATE180 = {type = "val"},
            EM_BMP_ROTATE270 = {type = "val"},
            EM_BMP_ROTATE90 = {type = "val"},
            ENAMETOOLONG = {type = "val"},
            ENAVAIL = {type = "val"},
            ENETDOWN = {type = "val"},
            ENETRESET = {type = "val"},
            ENETUNREACH = {type = "val"},
            ENFILE = {type = "val"},
            ENOANO = {type = "val"},
            ENOBUFS = {type = "val"},
            ENOCSI = {type = "val"},
            ENODATA = {type = "val"},
            ENODEV = {type = "val"},
            ENOENT = {type = "val"},
            ENOEXEC = {type = "val"},
            ENOLCK = {type = "val"},
            ENOLINK = {type = "val"},
            ENOMEDIUM = {type = "val"},
            ENOMEM = {type = "val"},
            ENOMSG = {type = "val"},
            ENONET = {type = "val"},
            ENOPKG = {type = "val"},
            ENOPROTOOPT = {type = "val"},
            ENOSPC = {type = "val"},
            ENOSR = {type = "val"},
            ENOSTR = {type = "val"},
            ENOSYS = {type = "val"},
            ENOTBLK = {type = "val"},
            ENOTCONN = {type = "val"},
            ENOTDIR = {type = "val"},
            ENOTEMPTY = {type = "val"},
            ENOTNAM = {type = "val"},
            ENOTSOCK = {type = "val"},
            ENOTTY = {type = "val"},
            ENOTUNIQ = {type = "val"},
            ENXIO = {type = "val"},
            EOPNOTSUPP = {type = "val"},
            EOVERFLOW = {type = "val"},
            EPERM = {type = "val"},
            EPFNOSUPPORT = {type = "val"},
            EPIPE = {type = "val"},
            EPROTO = {type = "val"},
            EPROTONOSUPPORT = {type = "val"},
            EPROTOTYPE = {type = "val"},
            ERANGE = {type = "val"},
            EREMCHG = {type = "val"},
            EREMOTE = {type = "val"},
            EREMOTEIO = {type = "val"},
            ERESTART = {type = "val"},
            EROFS = {type = "val"},
            ESHUTDOWN = {type = "val"},
            ESOCKTNOSUPPORT = {type = "val"},
            ESPIPE = {type = "val"},
            ESRCH = {type = "val"},
            ESRMNT = {type = "val"},
            ESTALE = {type = "val"},
            ESTRPIPE = {type = "val"},
            ETIME = {type = "val"},
            ETIMEDOUT = {type = "val"},
            ETOOMANYREFS = {type = "val"},
            ETXTBSY = {type = "val"},
            EUCLEAN = {type = "val"},
            EUNATCH = {type = "val"},
            EUSERS = {type = "val"},
            EWIFI_ACCESSISP = {type = "val"},
            EWIFI_ACCESSPOP3 = {type = "val"},
            EWIFI_ALLFTPINUSE = {type = "val"},
            EWIFI_BUILDPOP3 = {type = "val"},
            EWIFI_BUILDPPP = {type = "val"},
            EWIFI_BUILDSMTP = {type = "val"},
            EWIFI_BUSY = {type = "val"},
            EWIFI_CMDIGNORE = {type = "val"},
            EWIFI_COMMPLATFORM = {type = "val"},
            EWIFI_CONNFTPTO = {type = "val"},
            EWIFI_CONNLOST = {type = "val"},
            EWIFI_CONNTELNETTO = {type = "val"},
            EWIFI_CREATSOCK = {type = "val"},
            EWIFI_DEFAULTRES = {type = "val"},
            EWIFI_DIALFAIL = {type = "val"},
            EWIFI_DONE = {type = "val"},
            EWIFI_EMAILIPREG = {type = "val"},
            EWIFI_EMAILPARAUPDT = {type = "val"},
            EWIFI_EOM = {type = "val"},
            EWIFI_EOP = {type = "val"},
            EWIFI_EXPCOMMA = {type = "val"},
            EWIFI_EXPCR = {type = "val"},
            EWIFI_EXPCRORCOMMA = {type = "val"},
            EWIFI_EXPDNS = {type = "val"},
            EWIFI_EXPEQL = {type = "val"},
            EWIFI_EXPNUM = {type = "val"},
            EWIFI_EXPSTR = {type = "val"},
            EWIFI_EXPTILDE = {type = "val"},
            EWIFI_EXPTXT = {type = "val"},
            EWIFI_FTPCMD = {type = "val"},
            EWIFI_FTPDATASOCK = {type = "val"},
            EWIFI_FTPDOWN = {type = "val"},
            EWIFI_FTPLOGIN = {type = "val"},
            EWIFI_FTPSEND = {type = "val"},
            EWIFI_FTPSVRFOUND = {type = "val"},
            EWIFI_FWUPDT = {type = "val"},
            EWIFI_GENERALEXCEPT = {type = "val"},
            EWIFI_GETPARA = {type = "val"},
            EWIFI_HFCCTSH = {type = "val"},
            EWIFI_HOSTTO = {type = "val"},
            EWIFI_HTTPFAIL = {type = "val"},
            EWIFI_HTTPTO = {type = "val"},
            EWIFI_HTTPUNKNOWN = {type = "val"},
            EWIFI_ILLCMD = {type = "val"},
            EWIFI_ILLCMDMDM = {type = "val"},
            EWIFI_ILLDELIMITER = {type = "val"},
            EWIFI_ILLHTTPNAME = {type = "val"},
            EWIFI_ILLHTTPPORT = {type = "val"},
            EWIFI_ILLSNR = {type = "val"},
            EWIFI_ILLSSLSOCK = {type = "val"},
            EWIFI_ILLURL = {type = "val"},
            EWIFI_ILLVAL = {type = "val"},
            EWIFI_ILLWIFICHNL = {type = "val"},
            EWIFI_INTMEMFAIL = {type = "val"},
            EWIFI_IPREGFAIL = {type = "val"},
            EWIFI_LOADCA = {type = "val"},
            EWIFI_LOCPOP3 = {type = "val"},
            EWIFI_LOCPORTINUSE = {type = "val"},
            EWIFI_LOCSMTP = {type = "val"},
            EWIFI_MACEXIST = {type = "val"},
            EWIFI_MAXMINE = {type = "val"},
            EWIFI_MBE = {type = "val"},
            EWIFI_MODEMRESPOND = {type = "val"},
            EWIFI_NEGSSL3 = {type = "val"},
            EWIFI_NOADDSSLSOCK = {type = "val"},
            EWIFI_NOAVAILDSOCK = {type = "val"},
            EWIFI_NOCARRIER = {type = "val"},
            EWIFI_NOCARRIERSOCK = {type = "val"},
            EWIFI_NODIALTONE = {type = "val"},
            EWIFI_NODNSDEF = {type = "val"},
            EWIFI_NOIP = {type = "val"},
            EWIFI_NOISPDEF = {type = "val"},
            EWIFI_NOMBXDEF = {type = "val"},
            EWIFI_NOMPWDDEF = {type = "val"},
            EWIFI_NOPOP3DEF = {type = "val"},
            EWIFI_NOPWDENTER = {type = "val"},
            EWIFI_NOREADEF = {type = "val"},
            EWIFI_NOSMTPDEF = {type = "val"},
            EWIFI_NOSOCK = {type = "val"},
            EWIFI_NOSUITMSG = {type = "val"},
            EWIFI_NOTANFTP = {type = "val"},
            EWIFI_NOTOADEF = {type = "val"},
            EWIFI_NOTRUSTCA = {type = "val"},
            EWIFI_NOURL = {type = "val"},
            EWIFI_NOUSRNDEF = {type = "val"},
            EWIFI_OFFLINE = {type = "val"},
            EWIFI_ONLINE = {type = "val"},
            EWIFI_ONLINELOST = {type = "val"},
            EWIFI_OUTOFMEM = {type = "val"},
            EWIFI_PARSECA = {type = "val"},
            EWIFI_PART = {type = "val"},
            EWIFI_PINGDEST = {type = "val"},
            EWIFI_PINGNOREPLY = {type = "val"},
            EWIFI_POP3FAIL = {type = "val"},
            EWIFI_POP3TO = {type = "val"},
            EWIFI_PPPDOWN = {type = "val"},
            EWIFI_PPPOPEN = {type = "val"},
            EWIFI_RCV = {type = "val"},
            EWIFI_REMOTELOST = {type = "val"},
            EWIFI_RES2065 = {type = "val"},
            EWIFI_RES2066 = {type = "val"},
            EWIFI_RES2084 = {type = "val"},
            EWIFI_RES2085 = {type = "val"},
            EWIFI_RES2091 = {type = "val"},
            EWIFI_RES2092 = {type = "val"},
            EWIFI_RES2093 = {type = "val"},
            EWIFI_RES2098 = {type = "val"},
            EWIFI_RES2099 = {type = "val"},
            EWIFI_RES2117 = {type = "val"},
            EWIFI_RES2120 = {type = "val"},
            EWIFI_RES2121 = {type = "val"},
            EWIFI_RES2223 = {type = "val"},
            EWIFI_RES2500 = {type = "val"},
            EWIFI_RES2502 = {type = "val"},
            EWIFI_RES2503 = {type = "val"},
            EWIFI_RES2504 = {type = "val"},
            EWIFI_RES2514 = {type = "val"},
            EWIFI_RES2558 = {type = "val"},
            EWIFI_RES2559 = {type = "val"},
            EWIFI_RETRIEVERSP = {type = "val"},
            EWIFI_SDATAOVERFLOW = {type = "val"},
            EWIFI_SETPARA = {type = "val"},
            EWIFI_SMTPFAIL = {type = "val"},
            EWIFI_SMTPTO = {type = "val"},
            EWIFI_SNETBAUD = {type = "val"},
            EWIFI_SNETHIF0 = {type = "val"},
            EWIFI_SNETHIFPARA = {type = "val"},
            EWIFI_SNETPARA = {type = "val"},
            EWIFI_SNETSOCKCLOSE = {type = "val"},
            EWIFI_SNEXIST = {type = "val"},
            EWIFI_SOCKDOWN = {type = "val"},
            EWIFI_SOCKEMPTY = {type = "val"},
            EWIFI_SOCKFLUSH = {type = "val"},
            EWIFI_SOCKIPREG = {type = "val"},
            EWIFI_SOCKRECV = {type = "val"},
            EWIFI_SOCKSEND = {type = "val"},
            EWIFI_SOCKUNUSE = {type = "val"},
            EWIFI_SSLDECODE = {type = "val"},
            EWIFI_SSLPACKSIZE = {type = "val"},
            EWIFI_SSNDCHKSUM = {type = "val"},
            EWIFI_SSNDSIZE = {type = "val"},
            EWIFI_SYNTAX = {type = "val"},
            EWIFI_TELNETACTIVE = {type = "val"},
            EWIFI_TELNETASCMODE = {type = "val"},
            EWIFI_TELNETBINMODE = {type = "val"},
            EWIFI_TELNETCMD = {type = "val"},
            EWIFI_TELNETDOWN = {type = "val"},
            EWIFI_TELNETOPENED = {type = "val"},
            EWIFI_TELNETSVR = {type = "val"},
            EWIFI_UPDATE = {type = "val"},
            EWIFI_URLTOOLONG = {type = "val"},
            EWIFI_USERABORT = {type = "val"},
            EWIFI_USERABORTDDD = {type = "val"},
            EWIFI_USERABORTSYS = {type = "val"},
            EWIFI_USRVPARA = {type = "val"},
            EWIFI_WEBIPREG = {type = "val"},
            EWIFI_WIFIBUSY = {type = "val"},
            EWIFI_WLANHWSETUP = {type = "val"},
            EWIFI_WLANPWR = {type = "val"},
            EWIFI_WLANRADIO = {type = "val"},
            EWIFI_WLENRESET = {type = "val"},
            EWIFI_WLPPSHORT = {type = "val"},
            EWIFI_WRINTPARA = {type = "val"},
            EWIFI_WWWFAIL = {type = "val"},
            EWOULDBLOCK = {type = "val"},
            EXDEV = {type = "val"},
            EXFULL = {type = "val"},
            FONT_ARIAL = {type = "val"},
            FONT_CHARSET_ARABIC = {type = "val"},
            FONT_CHARSET_ASCII = {type = "val"},
            FONT_CHARSET_CP1250 = {type = "val"},
            FONT_CHARSET_CP1251 = {type = "val"},
            FONT_CHARSET_CP1252 = {type = "val"},
            FONT_CHARSET_CP1255 = {type = "val"},
            FONT_CHARSET_CP437 = {type = "val"},
            FONT_CHARSET_CP737 = {type = "val"},
            FONT_CHARSET_CP775 = {type = "val"},
            FONT_CHARSET_CP850 = {type = "val"},
            FONT_CHARSET_CP852 = {type = "val"},
            FONT_CHARSET_CP855 = {type = "val"},
            FONT_CHARSET_CP857 = {type = "val"},
            FONT_CHARSET_CP860 = {type = "val"},
            FONT_CHARSET_CP861 = {type = "val"},
            FONT_CHARSET_CP862 = {type = "val"},
            FONT_CHARSET_CP863 = {type = "val"},
            FONT_CHARSET_CP864 = {type = "val"},
            FONT_CHARSET_CP865 = {type = "val"},
            FONT_CHARSET_CP866 = {type = "val"},
            FONT_CHARSET_CP869 = {type = "val"},
            FONT_CHARSET_CP874 = {type = "val"},
            FONT_CHARSET_CP932 = {type = "val"},
            FONT_CHARSET_CP936 = {type = "val"},
            FONT_CHARSET_CP949 = {type = "val"},
            FONT_CHARSET_CP950 = {type = "val"},
            FONT_CHARSET_GB18030 = {type = "val"},
            FONT_CHARSET_GB2312 = {type = "val"},
            FONT_CHARSET_ISO8859_1 = {type = "val"},
            FONT_CHARSET_ISO8859_10 = {type = "val"},
            FONT_CHARSET_ISO8859_11 = {type = "val"},
            FONT_CHARSET_ISO8859_12 = {type = "val"},
            FONT_CHARSET_ISO8859_13 = {type = "val"},
            FONT_CHARSET_ISO8859_14 = {type = "val"},
            FONT_CHARSET_ISO8859_15 = {type = "val"},
            FONT_CHARSET_ISO8859_16 = {type = "val"},
            FONT_CHARSET_ISO8859_2 = {type = "val"},
            FONT_CHARSET_ISO8859_3 = {type = "val"},
            FONT_CHARSET_ISO8859_4 = {type = "val"},
            FONT_CHARSET_ISO8859_5 = {type = "val"},
            FONT_CHARSET_ISO8859_6 = {type = "val"},
            FONT_CHARSET_ISO8859_7 = {type = "val"},
            FONT_CHARSET_ISO8859_8 = {type = "val"},
            FONT_CHARSET_ISO8859_9 = {type = "val"},
            FONT_CHARSET_UNICODE = {type = "val"},
            FONT_CHARSET_VIETNAM = {type = "val"},
            FONT_COURIER_NEW = {type = "val"},
            FONT_COURIER_NEW_B = {type = "val"},
            FONT_DOTUM = {type = "val"},
            FONT_KAPUTA = {type = "val"},
            FONT_LATHA = {type = "val"},
            FONT_SYSTEM = {type = "val"},
            FONT_SYS_TCVN3 = {type = "val"},
            FONT_TAHOMA = {type = "val"},
            FONT_TAHOMA_B = {type = "val"},
            FONT_TERMINAL = {type = "val"},
            FONT_TSC_KOMATHI = {type = "val"},
            FONT_VERDANA = {type = "val"},
            FONT_WUJEYA = {type = "val"},
            ICON_BATTERY = {type = "val"},
            ICON_DOWN = {type = "val"},
            ICON_ETH = {type = "val"},
            ICON_EXTPOWER = {type = "val"},
            ICON_ICCARD = {type = "val"},
            ICON_LOCK = {type = "val"},
            ICON_MAIL = {type = "val"},
            ICON_PHONE = {type = "val"},
            ICON_PRINTER = {type = "val"},
            ICON_SIGNAL = {type = "val"},
            ICON_UP = {type = "val"},
            KB_BIG_ALPHA = {type = "val"},
            KB_BIG_NUM = {type = "val"},
            KB_BIG_PWD = {type = "val"},
            KB_CANCEL = {type = "val"},
            KB_EN_BIGFONT = {type = "val"},
            KB_EN_CHAR = {type = "val"},
            KB_EN_CRYPTDISP = {type = "val"},
            KB_EN_FLOAT = {type = "val"},
            KB_EN_NEWLINE = {type = "val"},
            KB_EN_NUM = {type = "val"},
            KB_EN_PRESETSTR = {type = "val"},
            KB_EN_REVDISP = {type = "val"},
            KB_EN_SHIFTLEFT = {type = "val"},
            KB_ERROR = {type = "val"},
            KB_MAXLEN = {type = "val"},
            KB_SMALL_ALPHA = {type = "val"},
            KB_SMALL_NUM = {type = "val"},
            KB_SMALL_PWD = {type = "val"},
            KB_TIMEOUT = {type = "val"},
            KEY0 = {type = "val"},
            KEY1 = {type = "val"},
            KEY2 = {type = "val"},
            KEY3 = {type = "val"},
            KEY4 = {type = "val"},
            KEY5 = {type = "val"},
            KEY6 = {type = "val"},
            KEY7 = {type = "val"},
            KEY8 = {type = "val"},
            KEY9 = {type = "val"},
            KEY_ALPHA = {type = "val"},
            KEY_CANCEL = {type = "val"},
            KEY_CLEAR = {type = "val"},
            KEY_DOWN = {type = "val"},
            KEY_ENTER = {type = "val"},
            KEY_FN = {type = "val"},
            KEY_INVALID = {type = "val"},
            KEY_MENU = {type = "val"},
            KEY_PRNUP = {type = "val"},
            KEY_TIMEOUT = {type = "val"},
            KEY_UP = {type = "val"},
            LIGHT_OFF_MODE = {type = "val"},
            LIGHT_OFF_TEMP = {type = "val"},
            LIGHT_ON_MODE = {type = "val"},
            LIGHT_TIMER_MODE = {type = "val"},
            MIFARE_TRANSPORT_KEY = {type = "val"},
            MIF_BLUE1_LED = {type = "val"},
            MIF_BLUE2_LED = {type = "val"},
            MIF_DESFIRE = {type = "val"},
            MIF_FELICA = {type = "val"},
            MIF_GREEN_LED = {type = "val"},
            MIF_KEYA = {type = "val"},
            MIF_KEYB = {type = "val"},
            MIF_M1_S50 = {type = "val"},
            MIF_M1_S70 = {type = "val"},
            MIF_PRO = {type = "val"},
            MIF_PRO_S50 = {type = "val"},
            MIF_PRO_S70 = {type = "val"},
            MIF_RED_LED = {type = "val"},
            MIF_RET_AUTHERR = {type = "val"},
            MIF_RET_ERRPARA = {type = "val"},
            MIF_RET_MULTICARD = {type = "val"},
            MIF_RET_NOACTIVED = {type = "val"},
            MIF_RET_NOAUTH = {type = "val"},
            MIF_RET_NOCARD = {type = "val"},
            MIF_RET_NOSUPPORTCMD = {type = "val"},
            MIF_RET_NOSUPPORTTCL = {type = "val"},
            MIF_RET_OVERFLOW = {type = "val"},
            MIF_RET_PLBNOERR = {type = "val"},
            MIF_RET_PLCMDFLOWERR = {type = "val"},
            MIF_RET_PLCONDITIONERR = {type = "val"},
            MIF_RET_PLCRC1ERR = {type = "val"},
            MIF_RET_PLCRC2ERR = {type = "val"},
            MIF_RET_PLLENERR = {type = "val"},
            MIF_RET_PLLOPERATEERR = {type = "val"},
            MIF_RET_PLMACERR = {type = "val"},
            MIF_RET_PLNOBNOERR = {type = "val"},
            MIF_RET_PLNOFIRAUTHERR = {type = "val"},
            MIF_RET_PLPICCMACERR = {type = "val"},
            MIF_RET_PROTERR = {type = "val"},
            MIF_RET_SUCCESS = {type = "val"},
            MIF_RET_TIMEOUT = {type = "val"},
            MIF_RET_TRANSERR = {type = "val"},
            MIF_RET_VALUEERR = {type = "val"},
            MIF_TYPEB = {type = "val"},
            MIF_TYPEB_TCL = {type = "val"},
            MIF_TYPE_A = {type = "val"},
            MIF_TYPE_B = {type = "val"},
            MIF_TYPE_C1 = {type = "val"},
            MIF_TYPE_C2 = {type = "val"},
            MIF_ULTRALIGHT = {type = "val"},
            MIF_UNKNOWEN_TYPEA = {type = "val"},
            NETTYPE_CDMA = {type = "val"},
            NETTYPE_GPRS = {type = "val"},
            NETTYPE_WIFI = {type = "val"},
            NET_ERR_ABNORMAL = {type = "val"},
            NET_ERR_ATTACHING = {type = "val"},
            NET_ERR_BUSY = {type = "val"},
            NET_ERR_CSQWEAK = {type = "val"},
            NET_ERR_DETTACHED = {type = "val"},
            NET_ERR_DIALING = {type = "val"},
            NET_ERR_EMERGENCY = {type = "val"},
            NET_ERR_LINKCLOSED = {type = "val"},
            NET_ERR_LINKOPENING = {type = "val"},
            NET_ERR_NEEDRST = {type = "val"},
            NET_ERR_NOMODULE = {type = "val"},
            NET_ERR_NOSIM = {type = "val"},
            NET_ERR_NO_SUPPORT = {type = "val"},
            NET_ERR_PIN = {type = "val"},
            NET_ERR_PUK = {type = "val"},
            NET_ERR_PWD = {type = "val"},
            NET_ERR_REG_FORBID = {type = "val"},
            NET_ERR_RING = {type = "val"},
            NET_ERR_RSP = {type = "val"},
            NET_ERR_SIMDESTROY = {type = "val"},
            NET_ERR_SIM_BUSY = {type = "val"},
            NET_ERR_SRV_REJECT = {type = "val"},
            NET_ERR_UNKNOWN = {type = "val"},
            NET_ERR_USER_CANCEL = {type = "val"},
            NET_MOD_CM320 = {type = "val"},
            NET_MOD_CONNECTONE = {type = "val"},
            NET_MOD_EM200 = {type = "val"},
            NET_MOD_EM310 = {type = "val"},
            NET_MOD_G200 = {type = "val"},
            NET_MOD_G600 = {type = "val"},
            NET_MOD_GTM900 = {type = "val"},
            NET_MOD_MC52I = {type = "val"},
            NET_MOD_MC55I = {type = "val"},
            NET_MOD_MC8331A = {type = "val"},
            NET_MOD_ME3000 = {type = "val"},
            NET_MOD_MG323 = {type = "val"},
            NET_MOD_MG815 = {type = "val"},
            NET_MOD_Q24 = {type = "val"},
            OPENICON = {type = "val"},
            OPT_DEVETH = {type = "val"},
            OPT_DEVMODEM = {type = "val"},
            OPT_DEVWIFI = {type = "val"},
            OPT_DEVWNET = {type = "val"},
            PORT_COM1 = {type = "val"},
            PORT_GPS = {type = "val"},
            PORT_INVALID = {type = "val"},
            PORT_MODEM = {type = "val"},
            PORT_PINPAD = {type = "val"},
            PORT_RET_BUSY = {type = "val"},
            PORT_RET_MODEM_INUSE = {type = "val"},
            PORT_RET_NOTEMPTY = {type = "val"},
            PORT_RET_NOTOPEN = {type = "val"},
            PORT_RET_OK = {type = "val"},
            PORT_RET_PARAERR = {type = "val"},
            PORT_RET_PORTERR = {type = "val"},
            PORT_RET_TIMEOUT = {type = "val"},
            PORT_WNET = {type = "val"},
            PRN_BUSY = {type = "val"},
            PRN_FAULT = {type = "val"},
            PRN_NOFONTLIB = {type = "val"},
            PRN_OK = {type = "val"},
            PRN_OUTOFMEMORY = {type = "val"},
            PRN_PAPEROUT = {type = "val"},
            PRN_TOOHEAT = {type = "val"},
            PRN_UNFINISHED = {type = "val"},
            PRN_WIDTH = {type = "val"},
            PRN_WRONG_PACKAGE = {type = "val"},
            SCR_HEIGHT = {type = "val"},
            SCR_WIDTH = {type = "val"},
            SOCK_DGRAM = {type = "val"},
            SOCK_STREAM = {type = "val"},
            SOL_DEVICE = {type = "val"},
            SOL_SOCKET = {type = "val"},
            SO_BINDDEV = {type = "val"},
            SO_RCVTIMEO = {type = "val"},
            SO_SNDTIMEO = {type = "val"},
            beep = {
                type = "function",
                args = "(freq, ms)",
                returns = "none",
            },
            clear_keyboard_buffer = {
                type = "function",
                args = "()",
                returns = "none",
            },
            cpu_serial_number = {
                type = "function",
                args = "()",
                returns = "str",
            },
            font_str_width = {
                type = "function",
                args = "(font_name, font_charset, font_size, str)",
                returns = "width (int)",
            },
            get_key = {
                type = "function",
                description = [[
 read key from keyboard buffer
 timeout=nil => infinite wait
 timeout=0 => read key immediately]],
                args = "([timeout])",
                returns = "key code or nil if keyboard buffer",
            },
            get_string_width = {
                type = "function",
                args = "(font_name, font_charset, font_size, str)",
                returns = "int",
            },
            init_comport_console = {
                type = "function",
                description = "initialize redirection of stdin and stdout to com port 1",
                args = "(port[,params])",
                returns = "none",
            },
            init_nul_console = {
                type = "function",
                description = "supress stdout and stdin",
                args = "()",
                returns = "none",
            },
            init_screen_console = {
                type = "function",
                description = "initialize redirection of stdin and stdout to screen",
                args = "([cls=false])",
                returns = "none",
            },
            key_avail = {
                type = "function",
                args = "()",
                returns = "bool",
            },
            lcd_big_font_selected = {
                type = "function",
                args = "()",
                returns = "bool",
            },
            lcd_clear_lines = {
                type = "function",
                description = "clear small lines in range [0, 7]",
                args = "(from, to)",
            },
            lcd_cls = {
                type = "function",
                description = "clear lcd display",
                args = "()",
            },
            lcd_draw_frame = {
                type = "function",
                args = "(top_x, top_y, bottom_x, bottom_y, [undraw = false])",
                returns = "none",
            },
            lcd_get_font = {
                type = "function",
                args = "([secondary=false])",
                returns = "font_name, font_charset, font_height",
            },
            lcd_get_string_width = {
                type = "function",
                args = "(str)",
                returns = "int -- returns width of string with currently selected font size",
            },
            lcd_print = {
                type = "function",
                description = [[
 print using currently selected font size (selected by pos.lcd_use_big_font or by last call of print_big or print_small
 attrs
  'INVERSE'
  'INVERSE_LINE'
  'CLEAR_LINE'
  'ALIGN_CENTER'
  'ALIGN_LEFT' (the default)
  'ALIGN_RIGHT'
 }]],
                args = "(x_pixel_offset, line_number, text, [bit_flags | [attr ...]])",
                returns = "none",
            },
            lcd_print_ascii = {
                type = "function",
                description = [[
 print using small sys ascii font
 for attrs see pos.lcd_print()]],
                args = "(x_pixel_offset, line_number, text, [bit_flags | [attr ...]])",
                returns = "none",
            },
            lcd_print_big = {
                type = "function",
                description = [[
  print using big font, lines=4
  for attrs see pos.lcd_print()]],
                args = "(x_pixel_offset, line_number, text, [bit_flags | [attr ...]])",
                returns = "none",
            },
            lcd_print_small = {
                type = "function",
                description = [[
 print using small font, lines=8
 for attrs see pos.lcd_print()]],
                args = "(x_pixel_offset, line_number, text, [bit_flags | [attr ...]])",
                returns = "none",
            },
            lcd_select_big_font = {
                type = "function",
                args = "([select=true])",
                returns = "none",
            },
            lcd_select_font_size = {
                type = "function",
                description = [[
 select font size according to param
  param:
     'big'|'BIG'|'b'|'B' -- select big font
     'small'|'SMALL'|'s'|'S' -- select small font]],
                args = "(param)",
                returns = "none",
            },
            lcd_select_small_font = {
                type = "function",
                args = "([select=true])",
                returns = "none",
            },
            lcd_set_fonts = {
                type = "function",
                args = "(big_font_name, small_font_name, charset)",
            },
            lcd_set_icon = {
                type = "function",
                description = [[
  icons:
     pos.ICON_PHONE
     pos.ICON_SIGNAL
     pos.ICON_PRINTER
     pos.ICON_ICCARD
     pos.ICON_LOCK
     pos.ICON_BATTERY
     pos.ICON_EXTPOWER
     pos.ICON_UP
     pos.ICON_DOWN
     pos.ICON_ETH
     pos.ICON_MAIL]],
                args = "(icon, value)",
                returns = "none",
            },
            lcd_set_inverse = {
                type = "function",
                args = "([on=true])",
                returns = "none",
            },
            lcd_show_icon = {
                type = "function",
                description = [[
 show or hide icon
  icons:
     pos.ICON_PHONE
     pos.ICON_SIGNAL
     pos.ICON_PRINTER
     pos.ICON_ICCARD
     pos.ICON_LOCK
     pos.ICON_BATTERY
     pos.ICON_EXTPOWER
     pos.ICON_UP
     pos.ICON_DOWN
     pos.ICON_ETH
     pos.ICON_MAIL]],
                args = "(icon, [show=true])",
                returns = "none",
            },
            lcd_stipple = {
                type = "function",
                args = "(x, y, [draw=true])",
                returns = "none",
            },
            mif_auth_block = {
                type = "function",
                args = "(serial, key_type, key, block_nr [,num_blocks=1])",
                returns = "bool[,err_code if unsuccessfull]",
            },
            mif_detect = {
                type = "function",
                args = "()",
                returns = "card serial | nil,err code",
            },
            mif_exchange = {
                type = "function",
                args = "(input_data [input_data_len])",
                returns = "output data | nil, err_code",
            },
            mif_halt = {
                type = "function",
                args = "()",
                returns = "true | false, err_code",
            },
            mif_open = {
                type = "function",
                args = "()",
                returns = "none",
            },
            mif_read = {
                type = "function",
                description = "read blocks from mifare card and answer data as string",
                args = "(card_serial, key_type, key, first_block_nr [,num_blocks=1])",
                returns = "str | nil, err_code, op, block_nr",
            },
            mif_read = {
                type = "function",
                description = "read blocks from mifare card and write data into specified bst",
                args = "(card_serial, key_type, key, first_block_nr, num_blocks=1, bst)",
                returns = "true | nil, err_code, op, block_nr",
            },
            mif_read_block = {
                type = "function",
                args = "(block_nr)",
                returns = "string[16] | nil, err_code",
            },
            mif_read_block = {
                type = "function",
                args = "(block_nr, bst])",
                returns = "true | nil, err_code",
            },
            mif_write = {
                type = "function",
                args = "(card_serial, key_type, key, bst, first_block_nr[,n_blocks=#bst:avail_to_read()/16])",
                returns = "true | false, err_code, op, block_nr",
            },
            mif_write = {
                type = "function",
                args = "(card_serial, key_type, key, str, first_block_nr[,n_blocks=#str/16)",
                returns = "true| false, err_code, op, block_nr",
            },
            mif_write_block = {
                type = "function",
                args = "(block_nr, block_data)",
                returns = "true | false, err_code",
            },
            net_accept = {
                type = "function",
                args = "(socket)",
                returns = "client_socket, client_ip, port_num | nil, err_code",
            },
            net_bind = {
                type = "function",
                args = "(socket, ip, port)",
                returns = "true | nil, err_code",
            },
            net_bind_dev = {
                type = "function",
                args = "(socket, [new_bind_dev])",
                returns = "bind_dev | nil, err_code",
            },
            net_close = {
                type = "function",
                args = "(socket)",
                returns = "true | nil, err_code",
            },
            net_connect = {
                type = "function",
                args = "(socket, ip_or_url [, port=0])",
                returns = "true | nil, err_code",
            },
            net_get_tcpip_config = {
                type = "function",
                args = "(dev_type)",
                returns = "use_dhcp, localip, subnet, gateway, dns1, dns2 | nil, err_code",
            },
            net_listen = {
                type = "function",
                args = "(socket [, backlog = 5])",
                returns = "true | nil, err_code",
            },
            net_recv = {
                type = "function",
                args = "(socket, len)",
                returns = "received | nil, err_code",
            },
            net_recv_timeout = {
                type = "function",
                args = "(socket, [new_timeout_ms])",
                returns = "timeout_ms | nil, err_code",
            },
            net_send = {
                type = "function",
                args = "(socket, data)",
                returns = "number of bytes sent | nil, err_code",
            },
            net_send_timeout = {
                type = "function",
                args = "(socket, [new_timeout_ms])",
                returns = "timeout_ms | nil, err_code",
            },
            net_set_tcpip_config = {
                type = "function",
                args = "(dev_type, use_dhcp, localip, subnet, gateway, dns1, dns2)",
                returns = "true | nil, err_code",
            },
            net_socket = {
                type = "function",
                args = "([socket_type = SOCK_STREAM])",
                returns = "socket | nil, err_code",
            },
            port_close = {
                type = "function",
                args = "(port_num)",
                returns = "true | false,err_code",
            },
            port_eval = {
                type = "function",
                description = [[
 input from port: \n text to eval of num_bytes
 output: error or serialized eval result]],
                args = "(num_bytes)",
                returns = "result",
            },
            port_has_pending_input = {
                type = "function",
                args = "(port_num)",
                returns = "bool | nil,err_code",
            },
            port_open = {
                type = "function",
                args = "(port_num, port_params)",
                returns = "true | false, err code",
            },
            port_recv = {
                type = "function",
                args = "(port_num, len, first_byte_timeout, [next_byte_timeout = first_byte_timeout])",
                returns = "str,err_code",
            },
            port_recv_byte = {
                type = "function",
                args = "(port_num, timeout)",
                returns = "number | nil, err_code",
            },
            port_recv_line = {
                type = "function",
                args = "(port_num, first_byte_timeout, [next_byte_timeout = first_byte_timeout])",
                returns = "str,err_code",
            },
            port_recv_upto = {
                type = "function",
                args = "(port_num, upto_byte, include_upto_byte, first_byte_timeout [,next_byte_timeout=first_byte_timeout [,max_len=unlimited]])",
                returns = "str,err_code",
            },
            port_reset = {
                type = "function",
                args = "(port_num)",
                returns = "true | false,err_code",
            },
            port_send = {
                type = "function",
                args = "(port_num, bst, [off = 0, len = bst:len() - off])",
                returns = "true | false,err_code",
            },
            port_send = {
                type = "function",
                args = "(port_num, byte)",
                returns = "true | false,err_code",
            },
            port_send = {
                type = "function",
                args = "(port_num, str, [off = 0, len = #str - off])",
                returns = "true | false,err_code",
            },
            port_send_buffer_empty = {
                type = "function",
                args = "(port_num)",
                returns = "bool | nil,err_code",
            },
            ppp_check = {
                type = "function",
                args = "(dev_type)",
                returns = "true | nil, err_code",
            },
            ppp_login = {
                type = "function",
                args = "(dev_type, apn, login, pass, [auth, [timeout]])",
                returns = "true | nil, err_code",
            },
            ppp_logout = {
                type = "function",
                args = "(opt)",
                returns = "true | nil, err_code",
            },
            print_file_list = {
                type = "function",
                args = "([user_only=false])",
                returns = "none",
            },
            prn_get_font = {
                type = "function",
                args = "([secondary=false])",
                returns = "font_name, font_charset, font_height",
            },
            prn_get_status = {
                type = "function",
                args = "()",
                returns = "int",
            },
            prn_get_string_width = {
                type = "function",
                args = "(str, [secondary_font = false])",
            },
            prn_get_temerature = {
                type = "function",
                args = "()",
                returns = "temperature (num)",
            },
            prn_init = {
                type = "function",
                args = "()",
                returns = "bool, err(if false)",
            },
            prn_left_indent = {
                type = "function",
                args = "(int)",
                returns = "none",
            },
            prn_print = {
                type = "function",
                args = "(str)",
                returns = "bool (, error code if false)",
            },
            prn_printf = {
                type = "function",
                args = "(fmt, args)",
                returns = "bool (,err code if false)",
            },
            prn_println = {
                type = "function",
                args = "(line)",
                returns = "bool (,err code if false)",
            },
            prn_set_font = {
                type = "function",
                args = "(font_name, charset, height, [set_secondary_font = false])",
                returns = "bool",
            },
            prn_set_font_zoom = {
                type = "function",
                args = "(width_zoom,height_zoom)",
                returns = "none",
            },
            prn_set_gray = {
                type = "function",
                args = "(gray_level)",
                returns = "none",
            },
            prn_set_left_margin = {
                type = "function",
                args = "(margin_pixels)",
                returns = "none",
            },
            prn_set_spacing = {
                type = "function",
                args = "(char_spacing, line_spacing)",
                returns = "none",
            },
            prn_start = {
                type = "function",
                args = "()",
                returns = "bool",
            },
            prn_step = {
                type = "function",
                args = "(pixel_delta)",
                returns = "none",
            },
            receive_file_via_port = {
                type = "function",
                description = "receive file via com port 1 and store in specified file",
                args = "(file_name, num_bytes, [then_reboot = false])",
                returns = "none",
            },
            send_file_via_port = {
                type = "function",
                args = "(file_name, [off = 0, [len = fsize - off]])",
                returns = "none",
            },
            sleep = {
                type = "function",
                args = "(ms)",
                returns = "none",
            },
            terminal_serial_number = {
                type = "function",
                args = "()",
                returns = "str",
            },
            wnet_check_sim = {
                type = "function",
                args = "()",
                returns = "true | nil, err_code",
            },
            wnet_get_IMEI = {
                type = "function",
                args = "()",
                returns = "str | nil, err_code",
            },
            wnet_get_current_sim_slot = {
                type = "function",
                args = "()",
                returns = "slot number | nil, err",
            },
            wnet_get_dns = {
                type = "function",
                args = "()",
                returns = "mdns, sdns | nil, err_code",
            },
            wnet_get_info = {
                type = "function",
                args = "()",
                returns = "net_type, mod_type, mod_ver | nil, err_code",
            },
            wnet_init = {
                type = "function",
                args = "([timeout_ms=1000])",
                returns = "true | nil, err_code",
            },
            wnet_input_sim_pin = {
                type = "function",
                args = "(pin_str)",
                returns = "true | nil, err_code",
            },
            wnet_read_sim_card_id = {
                type = "function",
                args = "()",
                returns = "sim id | nil, err_code",
            },
            wnet_reset = {
                type = "function",
                args = "()",
                returns = "true | nil, err_code",
            },
            wnet_resolve = {
                type = "function",
                args = "(name)",
                returns = "ip_str | nil, err_code",
            },
            wnet_select_module = {
                type = "function",
                args = "(module)",
                returns = "true | nil, err_code",
            },
            wnet_set_current_sim_slot = {
                type = "function",
                args = "(slot)",
                returns = "true | nil, err",
            },
            wnet_set_dns = {
                type = "function",
                args = "(mdns, sdns)",
                returns = "true | nil, err_code",
            },
            wnet_signal = {
                type = "function",
                args = "()",
                returns = "num | nil, err_code",
            },
        }
    }
}
